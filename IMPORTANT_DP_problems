1D DP
1.FIBONACCI USING MEMO

2.2 STAIRS PROBLEM

3.3 STAIRS PROBLEM

4.HOUSE THIEVES / HOUSE ROBBER

5.COIN CHANGE - 1

6.COIN CHANGE - 2




2D DP
7.UNIQUE PATHS

#include<bits/stdc++.h>
using namespace std;
int uniquePaths(int m,int n)
{
 int dp[n]={0};
 dp[0]=1;
 for(int i=0;i<m;i++)
 {
  for(int j=1;j<n;j++)
    dp[j]=dp[j]+dp[j-1];
 }
 return dp[n-1];
}
int main()
{
 int m,n;
 cin>>m>>n;
 cout<<uniquePaths(m,n);
}
TC: O(mn)
SC: O(n)



8.MIN PATH SUM



 int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>> dp(m,vector<int>(n));
        dp[0][0]=grid[0][0];
        
        for(int i=1;i<m;i++)
            dp[i][0]=dp[i-1][0]+grid[i][0];
        for(int i=1;i<n;i++)
            dp[0][i]=dp[0][i-1]+grid[0][i];
        
        for(int i=1;i<m;i++)
            for(int j=1;j<n;j++)
            {
              dp[i][j]=min(dp[i-1][j],dp[i][j-1])+grid[i][j];
              
        
            }
        return dp[m-1][n-1];
            
    }
TC: O(n)
SC: O(n)

9.LCS



10.LIS



11.EDIT DISTANCE





